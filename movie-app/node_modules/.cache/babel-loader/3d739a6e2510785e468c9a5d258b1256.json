{"ast":null,"code":"var _jsxFileName = \"/home/nabirin/cs/Movie_Recommendation/movie-app/src/components/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { Movie } from '../movie.js';\nimport './home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const [home, setHome] = useState([]);\n  const [movies, setMovie] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    fetch('/home').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => {\n      console.log(data);\n      setMovie(data);\n    });\n  }, []);\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n  }; //const filterMovies = movies.filter(movie => movie.name.toLowerCase().includes(search.toLowerCase()))\n\n\n  const filterMovies = movies.filter(movie => movie.name.toLowerCase());\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"movie-text\",\n          children: \"Search a Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search\",\n            className: \"movie-input\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), filterMovies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(Movie, {\n          name: movie.name\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}; // {filteredCoins.map(coin => {\n//     return <Coin key={coin.id} \n//     name={coin.name}\n//     image={coin.image}\n//     symbol={coin.symbol}\n//     marketcap={coin.market_cap}\n//     price={coin.current_price}\n//     priceChange={coin.price_change_percentage_24h}\n//     volume={coin.total_volume}\n//     />;\n//   })}\n\n_s(Home, \"FLakYcotmf+6kxReyFYdKWF+RBA=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/nabirin/cs/Movie_Recommendation/movie-app/src/components/pages/home.js"],"names":["React","Component","useState","useEffect","Movie","Home","home","setHome","movies","setMovie","search","setSearch","fetch","then","response","ok","json","data","console","log","handleChange","e","target","value","filterMovies","filter","movie","name","toLowerCase","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,OAAO,YAAP;;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,MAAD,EAASC,QAAT,IAAqBP,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAAC,OAAD,CAAL,CAAeC,IAAf,CAAoBC,QAAQ,IAAI;AAC5B,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KAJD,EAIGH,IAJH,CAIQI,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAR,MAAAA,QAAQ,CAACQ,IAAD,CAAR;AACH,KAPD;AAQH,GATQ,EASN,EATM,CAAT;;AAUA,QAAMG,YAAY,GAAGC,CAAC,IAAI;AAAEV,IAAAA,SAAS,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AAA2B,GAAvD,CAdsB,CAetB;;;AACA,QAAMC,YAAY,GAAGhB,MAAM,CAACiB,MAAP,CAAcC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,WAAX,EAAvB,CAArB;AACA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,QAA/B;AAAwC,YAAA,SAAS,EAAC,aAAlD;AAAgE,YAAA,QAAQ,EAAER;AAA1E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAOKI,YAAY,CAACK,GAAb,CAAiBH,KAAK,IAAI;AACvB,4BAAO,QAAC,KAAD;AACP,UAAA,IAAI,EAAIA,KAAK,CAACC;AADP,WAAYD,KAAK,CAACI,EAAlB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEH,OAHA,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAgBH,CAjCM,C,CAmCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA7CazB,I;;KAAAA,I","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { Movie } from '../movie.js';\nimport './home.css';\n\nexport const Home = () => {\n    const [home, setHome] = useState([]);\n    const [movies, setMovie] = useState([]);\n    const [search, setSearch] = useState(\"\")\n    useEffect(() => {\n        fetch('/home').then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n        }).then(data => {\n            console.log(data);\n            setMovie(data)\n        })\n    }, [])\n    const handleChange = e => { setSearch(e.target.value) }\n    //const filterMovies = movies.filter(movie => movie.name.toLowerCase().includes(search.toLowerCase()))\n    const filterMovies = movies.filter(movie => movie.name.toLowerCase())\n    return (\n        <>\n            <div className='App'>\n                <div className='movie-search'>\n                    <h1 className='movie-text'>Search a Movie</h1>\n                    <form>\n                        <input type='text' placeholder='Search' className='movie-input' onChange={handleChange}/>\n                    </form>\n                </div>\n                {filterMovies.map(movie => {\n                    return <Movie key={movie.id}\n                    name = {movie.name} />\n                })}\n            </div>\n        </>\n    );\n}\n\n// {filteredCoins.map(coin => {\n//     return <Coin key={coin.id} \n//     name={coin.name}\n//     image={coin.image}\n//     symbol={coin.symbol}\n//     marketcap={coin.market_cap}\n//     price={coin.current_price}\n//     priceChange={coin.price_change_percentage_24h}\n//     volume={coin.total_volume}\n//     />;\n//   })}"]},"metadata":{},"sourceType":"module"}