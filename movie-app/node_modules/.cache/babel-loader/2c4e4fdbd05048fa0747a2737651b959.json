{"ast":null,"code":"var _jsxFileName = \"/home/nabirin/cs/Movie_Recommendation/movie-app/src/components/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { Router } from 'react-router';\nimport { useHistory } from \"react-router-dom\";\nimport { Route, Link } from 'react-router-dom';\nimport { Movie } from '../movie.js'; // import { Search } from './search.js';\n\nimport './home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  //const [home, setHome] = useState([]);\n  const [movies, setMovie] = useState(\"\");\n  const history = useHistory(); // const [filterMovies, setFilterMovies] = useState(0);\n  // const [search, setSearch] = useState(\"\")\n\n  useEffect(() => {// fetch('/home').then(response => {\n    //     if (response.ok) {return response.json()}\n    // }).then(data => {\n    //     console.log(data)\n    //     setMovie(data)\n    //     // console.log(movies)\n    // })\n  }, []); //const handleChange = e => { setSearch(e.target.value) }\n\n  const handleChange = e => {\n    setMovie(e.target.value);\n    console.log(movies);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(movies); // alert(movies)\n\n    const requestOptions = {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"movie\": movies\n      })\n    };\n    fetch('/request', requestOptions).then(response => response.json()).then(data => {\n      console.log(data);\n      setMovie(data); // alert(data)\n\n      history.push(\"/search\", data);\n    }, error => {\n      // alert(error + \"bob\")\n      alert(\"That movie doesn't exist\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"movie-text\",\n          children: \"Search a Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            movies: movies,\n            onChange: handleChange,\n            placeholder: \"Search\",\n            className: \"movie-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}; // <input type='text' id='userwant' placeholder='Search' className='movie-input' onChange={handleChange}/>\n// {\n//     method:\"POST\",\n//     cache: \"no-cache\",\n//     headers:{\n//         \"content_type\":\"application/json\",\n//     },\n//     body:JSON.stringify(document.getElementById('userwant').value) }\n// {filterMovies.map(movie => {\n//     return <Movie key={movie.id}\n//     name = {movie.name} />\n// })}\n//<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\">\n//if (document.getElementById('userwant').value) {\n//    $.post(\"/home\", JSON.stringify(document.getElementById('userwant').value), \"json\")\n//}\n//</script>\n\n_s(Home, \"4QqwPHJMesSaXwd1W0fxE0qRK0E=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/nabirin/cs/Movie_Recommendation/movie-app/src/components/pages/home.js"],"names":["React","Component","useState","useEffect","Router","useHistory","Route","Link","Movie","Home","movies","setMovie","history","handleChange","e","target","value","console","log","handleSubmit","preventDefault","requestOptions","method","mode","headers","body","JSON","stringify","fetch","then","response","json","data","push","error","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,KAAR,EAAeC,IAAf,QAA0B,kBAA1B;AACA,SAASC,KAAT,QAAsB,aAAtB,C,CACA;;AACA,OAAO,YAAP;;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACtB;AACA,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAMU,OAAO,GAAGP,UAAU,EAA1B,CAHsB,CAItB;AACA;;AAEAF,EAAAA,SAAS,CAAC,MAAM,CACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GARQ,EAQN,EARM,CAAT,CAPsB,CAgBtB;;AACA,QAAMU,YAAY,GAAGC,CAAC,IAAI;AACtBH,IAAAA,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACH,GAHD;;AAIA,QAAMS,YAAY,GAAGL,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACM,cAAF;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ,EAFsB,CAGtB;;AACA,UAAMW,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAC,MADY;AAEnBC,MAAAA,IAAI,EAAE,MAFa;AAGnBC,MAAAA,OAAO,EAAC;AAAC,wBAAgB;AAAjB,OAHW;AAInBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,iBAASjB;AAAV,OAAf;AAJa,KAAvB;AAMAkB,IAAAA,KAAK,CAAC,UAAD,EAAaP,cAAb,CAAL,CACKQ,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVf,MAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ;AACArB,MAAAA,QAAQ,CAACqB,IAAD,CAAR,CAFU,CAGV;;AACApB,MAAAA,OAAO,CAACqB,IAAR,CAAa,SAAb,EAAwBD,IAAxB;AACP,KAPD,EAQCE,KAAD,IAAW;AACP;AACAC,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACD,KAXH;AAaH,GAvBD;;AAwBA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,QAAQ,EAAEhB,YAAhB;AAAA,iCACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,MAAM,EAAET,MAA3B;AAAmC,YAAA,QAAQ,EAAEG,YAA7C;AAA2D,YAAA,WAAW,EAAC,QAAvE;AAAgF,YAAA,SAAS,EAAC;AAA1F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAaH,CA1DM,C,CA4DP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;GA/EaJ,I;UAGOJ,U;;;KAHPI,I","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { Router } from 'react-router';\nimport { useHistory } from \"react-router-dom\";\nimport {Route, Link} from 'react-router-dom';\nimport { Movie } from '../movie.js';\n// import { Search } from './search.js';\nimport './home.css';\n\nexport const Home = () => {\n    //const [home, setHome] = useState([]);\n    const [movies, setMovie] = useState(\"\");\n    const history = useHistory();\n    // const [filterMovies, setFilterMovies] = useState(0);\n    // const [search, setSearch] = useState(\"\")\n\n    useEffect(() => {\n        // fetch('/home').then(response => {\n        //     if (response.ok) {return response.json()}\n        // }).then(data => {\n        //     console.log(data)\n        //     setMovie(data)\n        //     // console.log(movies)\n        // })\n    }, [])\n    //const handleChange = e => { setSearch(e.target.value) }\n    const handleChange = e => { \n        setMovie(e.target.value) \n        console.log(movies)\n    }\n    const handleSubmit = e => { \n        e.preventDefault()\n        console.log(movies)\n        // alert(movies)\n        const requestOptions = {\n            method:'POST',\n            mode: 'cors',\n            headers:{'Content-Type': 'application/json'},\n            body: JSON.stringify({\"movie\": movies})\n        }\n        fetch('/request', requestOptions)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                setMovie(data)\n                // alert(data)\n                history.push(\"/search\", data);\n        }, \n        (error) => {\n            // alert(error + \"bob\")\n            alert(\"That movie doesn't exist\")\n          }\n        )\n    }\n    return (\n        <>\n            <div className='App'>\n                <div className='movie-search'>\n                    <h1 className='movie-text'>Search a Movie</h1>\n                    <form onSubmit={handleSubmit}>\n                        <input type='text' movies={movies} onChange={handleChange} placeholder='Search' className='movie-input'/>\n                    </form>\n                </div>\n\n            </div>\n        </>\n    );\n}\n\n// <input type='text' id='userwant' placeholder='Search' className='movie-input' onChange={handleChange}/>\n\n// {\n//     method:\"POST\",\n//     cache: \"no-cache\",\n//     headers:{\n//         \"content_type\":\"application/json\",\n//     },\n//     body:JSON.stringify(document.getElementById('userwant').value) }\n\n// {filterMovies.map(movie => {\n//     return <Movie key={movie.id}\n//     name = {movie.name} />\n// })}\n\n//<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\">\n//if (document.getElementById('userwant').value) {\n//    $.post(\"/home\", JSON.stringify(document.getElementById('userwant').value), \"json\")\n//}\n//</script>"]},"metadata":{},"sourceType":"module"}