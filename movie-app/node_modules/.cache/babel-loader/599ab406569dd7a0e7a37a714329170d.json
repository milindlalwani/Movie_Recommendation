{"ast":null,"code":"var _jsxFileName = \"/home/nabirin/cs/Movie_Recommendation/movie-app/src/components/pages/search.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Movie } from '../movie.js';\nimport './search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Search = () => {\n  _s();\n\n  const [movies, setMovie] = useState(\"\");\n  const history = useHistory();\n  console.log(\"reached search.js\");\n  console.log(history.location.state);\n  const filterMovies = Object.values(history.location.state).filter(movie => movie.name.toLowerCase());\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-search\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"movie-text\",\n          children: \"We recommend these movies:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), filterMovies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(Movie, {\n          name: movie.name\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Search, \"IGMMkVyjIANh6/g0E9THOq86FA8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/nabirin/cs/Movie_Recommendation/movie-app/src/components/pages/search.js"],"names":["React","Component","useState","useEffect","Link","useHistory","useParams","Movie","Search","movies","setMovie","history","console","log","location","state","filterMovies","Object","values","filter","movie","name","toLowerCase","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,KAAT,QAAsB,aAAtB;AAEA,OAAO,cAAP;;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBR,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAMS,OAAO,GAAGN,UAAU,EAA1B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,QAAR,CAAiBC,KAA7B;AACA,QAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcP,OAAO,CAACG,QAAR,CAAiBC,KAA/B,EAAsCI,MAAtC,CAA6CC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,WAAX,EAAtD,CAArB;AACA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKN,YAAY,CAACO,GAAb,CAAiBH,KAAK,IAAI;AACvB,4BAAO,QAAC,KAAD;AACP,UAAA,IAAI,EAAIA,KAAK,CAACC;AADP,WAAYD,KAAK,CAACI,EAAlB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEH,OAHA,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAaH,CAnBM;;GAAMhB,M;UAEOH,U;;;KAFPG,M","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Movie } from '../movie.js';\n\nimport './search.css';\n\nexport const Search = () => {\n    const [movies, setMovie] = useState(\"\");\n    const history = useHistory();\n    console.log(\"reached search.js\")\n    console.log(history.location.state)\n    const filterMovies = Object.values(history.location.state).filter(movie => movie.name.toLowerCase())\n    return (\n        <>\n            <div className='App'>\n                <div className='movie-search'>\n                    <h1 className='movie-text'>We recommend these movies:</h1>\n                </div>\n                {filterMovies.map(movie => {\n                    return <Movie key={movie.id}\n                    name = {movie.name} />\n                })}\n            </div>\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}